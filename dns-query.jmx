<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.0 r1840935">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="TEST DNS" enabled="true">
      <stringProp name="TestPlan.comments">This test plan demonstrate several UDP requests: NTP and DNS</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="host-template" elementType="Argument">
            <stringProp name="Argument.name">host-template</stringProp>
            <stringProp name="Argument.value">api.twitter.com. A IN</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="service-verify" elementType="Argument">
            <stringProp name="Argument.name">service-verify</stringProp>
            <stringProp name="Argument.value">www.google.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="host0" elementType="Argument">
            <stringProp name="Argument.name">host0</stringProp>
            <stringProp name="Argument.value">www.google.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="host1" elementType="Argument">
            <stringProp name="Argument.name">host1</stringProp>
            <stringProp name="Argument.value">www.facebook.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="host2" elementType="Argument">
            <stringProp name="Argument.name">host2</stringProp>
            <stringProp name="Argument.value">www.pantip.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
        <stringProp name="TestPlan.comments">This timer used to slow sampling down, and not make DoS attack to public servers.</stringProp>
        <stringProp name="ConstantTimer.delay">0</stringProp>
        <stringProp name="RandomTimer.range">100.0</stringProp>
      </UniformRandomTimer>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Test Query" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay">10</stringProp>
      </ThreadGroup>
      <hashTree>
        <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Google DNS" enabled="true"/>
        <hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="Google 8.8.8.8 Query ${host0}" enabled="true">
            <stringProp name="hostname">8.8.8.8</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host0}. A IN&#xd;
${host0}. AAAA IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="Google 8.8.8.8 Query ${host1}" enabled="true">
            <stringProp name="hostname">8.8.8.8</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host1}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="Google 8.8.8.8 Query ${host2}" enabled="true">
            <stringProp name="hostname">8.8.8.8</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host2}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="Google 8.8.4.4 Query ${host0}" enabled="false">
            <stringProp name="hostname">8.8.4.4</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host0}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="Google 8.8.4.4 Query ${host1}" enabled="false">
            <stringProp name="hostname">8.8.4.4</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host1}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="Google 8.8.4.4 Query ${host2}" enabled="false">
            <stringProp name="hostname">8.8.4.4</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host2}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Cloudflare DNS" enabled="true"/>
        <hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="Cloudflare 1.1.1.1 Query ${host0}" enabled="true">
            <stringProp name="hostname">1.1.1.1</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host0}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.					</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="Cloudflare 1.1.1.1 Query ${host1}" enabled="true">
            <stringProp name="hostname">1.1.1.1</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host1}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.					</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="Cloudflare 1.1.1.1 Query ${host2}" enabled="true">
            <stringProp name="hostname">1.1.1.1</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host2}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.					</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="OpenDNS" enabled="true"/>
        <hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="OpenDNS 208.67.220.220 Query ${host0}" enabled="false">
            <stringProp name="hostname">208.67.220.220</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host0}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.					</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="OpenDNS 208.67.220.220 Query ${host1}" enabled="false">
            <stringProp name="hostname">208.67.220.220</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host1}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.					</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="OpenDNS 208.67.220.220 Query ${host2}" enabled="false">
            <stringProp name="hostname">208.67.220.220</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host2}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.					</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="OpenDNS 208.67.222.222 Query ${host0}" enabled="true">
            <stringProp name="hostname">208.67.222.222</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host0}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.					</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="OpenDNS 208.67.222.222 Query ${host1}" enabled="true">
            <stringProp name="hostname">208.67.222.222</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host1}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.					</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="OpenDNS 208.67.222.222 Query ${host2}" enabled="true">
            <stringProp name="hostname">208.67.222.222</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host2}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.					</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="TH-True DNS" enabled="true"/>
        <hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="True 203.144.207.29 Query ${host0}" enabled="true">
            <stringProp name="hostname">203.144.207.29</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host0}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="True 203.144.207.29 Query ${host1}" enabled="true">
            <stringProp name="hostname">203.144.207.29</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host1}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="True 203.144.207.29 Query ${host2}" enabled="true">
            <stringProp name="hostname">203.144.207.29</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host2}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="True 203.144.207.49 Query ${host0}" enabled="false">
            <stringProp name="hostname">203.144.207.49</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host0}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="True 203.144.207.49 Query ${host1}" enabled="false">
            <stringProp name="hostname">203.144.207.49</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host1}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="True 203.144.207.49 Query ${host2}" enabled="false">
            <stringProp name="hostname">203.144.207.49</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host2}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="TH-TOT DNS" enabled="true"/>
        <hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="TOT 203.113.127.199 Query ${host0}" enabled="true">
            <stringProp name="hostname">203.113.127.199</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host0}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="TOT 203.113.127.199 Query ${host1}" enabled="true">
            <stringProp name="hostname">203.113.127.199</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host1}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="TOT 203.113.127.199 Query ${host2}" enabled="true">
            <stringProp name="hostname">203.113.127.199</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host2}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="TOT 203.113.24.199 Query ${host0}" enabled="false">
            <stringProp name="hostname">203.113.24.199</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host0}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="TOT 203.113.24.199 Query ${host1}" enabled="false">
            <stringProp name="hostname">203.113.24.199</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host1}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="TOT 203.113.24.199 Query ${host2}" enabled="false">
            <stringProp name="hostname">203.113.24.199</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host2}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="TOT 203.113.5.130 Query ${host0}" enabled="false">
            <stringProp name="hostname">203.113.5.130</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host0}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="TOT 203.113.5.130 Query ${host1}" enabled="false">
            <stringProp name="hostname">203.113.5.130</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host1}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="TOT 203.113.5.130 Query ${host2}" enabled="false">
            <stringProp name="hostname">203.113.5.130</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host2}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="TH-3BB DNS" enabled="true"/>
        <hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="3BB 110.164.252.222 Query ${host0}" enabled="true">
            <stringProp name="hostname">110.164.252.222</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host0}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="3BB 110.164.252.222 Query ${host1}" enabled="true">
            <stringProp name="hostname">110.164.252.222</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host1}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="3BB 110.164.252.222 Query ${host2}" enabled="true">
            <stringProp name="hostname">110.164.252.222</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host2}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="3BB 110.164.252.223 Query ${host0}" enabled="false">
            <stringProp name="hostname">110.164.252.223</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host0}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="3BB 110.164.252.223 Query ${host1}" enabled="false">
            <stringProp name="hostname">110.164.252.223</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host1}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="3BB 110.164.252.223 Query ${host2}" enabled="false">
            <stringProp name="hostname">110.164.252.223</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host2}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Level3 Communications" enabled="true"/>
        <hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="Level3 Communications 4.2.2.1 Query ${host0}" enabled="true">
            <stringProp name="hostname">4.2.2.1</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host0}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="Level3 Communications 4.2.2.1 Query ${host1}" enabled="true">
            <stringProp name="hostname">4.2.2.1</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host1}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="Level3 Communications 4.2.2.1 Query ${host2}" enabled="true">
            <stringProp name="hostname">4.2.2.1</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host2}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="Level3 Communications 4.2.2.2 Query ${host0}" enabled="false">
            <stringProp name="hostname">4.2.2.2</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host0}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="Level3 Communications 4.2.2.2 Query ${host1}" enabled="false">
            <stringProp name="hostname">4.2.2.2</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host1}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="Level3 Communications 4.2.2.2 Query ${host2}" enabled="false">
            <stringProp name="hostname">4.2.2.2</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host2}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="TH-CAT DNS (only Customer&apos;sCAT)" enabled="true"/>
        <hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="CAT 61.19.245.245 Query ${host0}" enabled="false">
            <stringProp name="hostname">61.19.245.245</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host0}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="CAT 61.19.245.245 Query ${host1}" enabled="false">
            <stringProp name="hostname">61.19.245.245</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host1}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="CAT 61.19.245.245 Query ${host2}" enabled="false">
            <stringProp name="hostname">61.19.245.245</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host2}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="CAT 61.19.245.246 Query ${host0}" enabled="false">
            <stringProp name="hostname">61.19.245.246</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host0}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="CAT 61.19.245.246 Query ${host1}" enabled="false">
            <stringProp name="hostname">61.19.245.246</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host1}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="CAT 61.19.245.246 Query ${host2}" enabled="false">
            <stringProp name="hostname">61.19.245.246</stringProp>
            <stringProp name="port">53</stringProp>
            <boolProp name="waitresponse">true</boolProp>
            <stringProp name="timeout">3000</stringProp>
            <stringProp name="data">${host2}. A IN</stringProp>
            <stringProp name="encodeclass">kg.apc.jmeter.samplers.DNSJavaDecoder</stringProp>
            <stringProp name="TestPlan.comments">This UDP request uses DNSJavaDecoder class and requires
DNSJava library present in JMeter lib folder.
This allows providing request/response data in human readable format.</stringProp>
            <boolProp name="closechannel">false</boolProp>
            <stringProp name="bind_address"></stringProp>
            <stringProp name="bind_port"></stringProp>
          </kg.apc.jmeter.samplers.UDPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1461206841">NOERROR</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">This assertion checks text response to contain NOERROR flag.</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>true</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="TestPlan.comments">Run the test and investigate generated samples.
Compare samples with data from network sniffer, 
if you have one.</stringProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
